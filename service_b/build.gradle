buildscript {
	ext {
		kotlinVersion = '1.2.70'
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.michaelkofman'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

sourceSets {
	main.kotlin.srcDirs += "src"
	test.kotlin.srcDirs += "test"
	main.resources.srcDirs += "src/resources"
	test.resources.srcDirs += "test/resources"
}

repositories {
	mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

dependencies {
	compile fileTree(include: ['*.jar'], dir: 'libs')
	implementation('org.apache.commons:commons-lang3:3.8.1')
	implementation('commons-validator:commons-validator:1.4.0')
	implementation('com.vladmihalcea:hibernate-types-52:1.0.0')

	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-actuator')

	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")

	implementation('org.axonframework:axon-spring-boot-starter:4.0') {
		exclude group: 'org.axonframework', module: 'axon-server-connector'
	}
	implementation('org.apache.kafka:kafka-clients')
	implementation('org.axonframework.extensions.kafka:axon-kafka-spring-boot-starter:4.0-RC2')
	implementation('org.axonframework.extensions.springcloud:axon-springcloud-spring-boot-starter:4.0')

	runtimeOnly('org.postgresql:postgresql')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}
